name: Deploy to app stores

on:
  push:
    tags:
      - 'v*.*.*'
      - '!v*-beta.*'

jobs:
  get_version:
    runs-on: ubuntu-latest
    name: Get release version
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1 
        with:
          node-version: '12'

      - run: echo ::set_output name=version::$(node -e 'console.log(require("./package.json").version)')
        id: get_version
    outputs:
      version: ${{ steps.get_version.outputs.version }}

  deploy-ios:
    runs-on: macos-10.15
    name: Deploy iOS release to App Store
    environment:
      name: iOS Beta
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1 
        with:
          node-version: '12'
      - uses: ruby/setup-ruby@v1

      - uses: ktmud/cached-dependencies@v1
        with:
          caches: ${{ github.workspace }}/.github/workflows/caches/ios.js
          bashlib: ${{ github.workspace }}/.github/workflows/bashlib/ios.sh
          parallel: true

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.FASTLANE_MATCH_DEPLOY_PRIVATE_KEY }}
        
      - run: npm run ci:generate-app-config
      - run: npm run appstore:ios
        name: Build and deploy
        env:
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}

  deploy-android:
    runs-on: macos-10.15
    name: Deploy Android release to Play Store
    environment:
      name: Android Beta
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1 
        with:
          node-version: '12'
      - uses: ruby/setup-ruby@v1

      - uses: ktmud/cached-dependencies@v1
        with:
          caches: ${{ github.workspace }}/.github/workflows/caches/android.js
          bashlib: ${{ github.workspace }}/.github/workflows/bashlib/android.sh
          parallel: true

      - run: npm run ci:generate-app-config
      - run: |
          echo "${{ secrets.ANDROID_RELEASE_KEYSTORE_BASE64 }}" | base64 --decode > android/keystores/release.keystore
          echo "${{ secrets.GOOGLE_PLAY_JSON_BASE64 }}" | base64 --decode > android/google-play.json
        name: Put deployment creds in place

      - run: npm run appstore:android
        name: Build and deploy
        env:
          ANDROID_RELEASE_PASSWORD: ${{ secrets.ANDROID_RELEASE_PASSWORD }}
